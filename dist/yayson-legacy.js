/*! yayson v 3.0.0 (https://github.com/confetti/yayson) by Johannes Edelstam <johannes@edelst.am>, Jonny Str√∂mberg <jonny.stromberg@gmail.com> */
var yayson;!function(){var t={580:function(t,e,s){const r=s(196),n=s(47),i=s(161);t.exports=function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{Store:e,Presenter:s,Adapter:o}=r(t);return{Store:i(e),Presenter:n(s),Adapter:o}}},196:function(t,e,s){const r=s(376),n=s(142),i=s(716),o=s(757),l=function(t){return"default"===t?r:n[t]||t||r};t.exports=function(){let{adapter:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const e=l(t),s=i(l(e)),n=o();return{Store:n,Presenter:s,Adapter:r}}},376:function(t){t.exports=class{static get(t,e){return e?t[e]:t}static id(t){const e=this.get(t,"id");return void 0===e?e:`${e}`}}},142:function(t,e,s){t.exports={sequelize:s(583)}},583:function(t,e,s){const r=s(376);t.exports=class extends r{static get(t,e){if(null!=t)return t.get(e)}}},47:function(t){function e(t,e,s){return(e=function(t){var e=function(t,e){if("object"!=typeof t||null===t)return t;var s=t[Symbol.toPrimitive];if(void 0!==s){var r=s.call(t,e||"default");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"==typeof e?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}t.exports=function(t){var s;return s=class extends t{pluralType(){return this.constructor.plural||this.constructor.type+"s"}attributes(t){if(!t)return null;const e={...this.constructor.adapter.get(t)},s=this.relationships();for(let t in s){var r;const s=e[t];null==s?null!=(r=e[t+"Id"])&&(e[t]=r):e[t]=s instanceof Array?s.map((t=>t.id)):s.id}return e}includeRelationships(t,e){t.links||(t.links={});const s=this.relationships(),r=[];for(var n in s){const i=s[n];if(!i)throw new Error(`Presenter for ${n} in ${this.constructor.type} is not defined`);const o=new i(t),l=this.constructor.adapter.get(e,n);null!=l&&o.toJSON(l,{defaultPlural:!0});const c=null!=t[this.pluralType()]?this.pluralType():this.constructor.type,u={type:null!=t[o.pluralType()]?o.pluralType():o.constructor.type};t.links[`${c}.${n}`]=u,r.push(u)}return r}toJSON(t,e){let s;if(null==e&&(e={}),t instanceof Array){const e=t;this.scope[s=this.pluralType()]||(this.scope[s]=[]),e.forEach((t=>this.toJSON(t)))}else{let s;const r=t;let n=!0;const i=this.attributes(r);(s=this.links())&&(i.links=s),this.scope[this.constructor.type]&&!this.scope[this.pluralType()]?this.scope[this.constructor.type].id!==i.id?(this.scope[this.pluralType()]=[this.scope[this.constructor.type]],delete this.scope[this.constructor.type],this.scope[this.pluralType()].push(i)):n=!1:this.scope[this.pluralType()]?this.scope[this.pluralType()].some((t=>t.id===i.id))?n=!1:this.scope[this.pluralType()].push(i):e.defaultPlural?this.scope[this.pluralType()]=[i]:this.scope[this.constructor.type]=i,n&&this.includeRelationships(this.scope,r)}return this.scope}render(t){return this.toJSON(t)}static toJSON(){return(new this).toJSON(...arguments)}static render(){return(new this).render(...arguments)}},e(s,"type","object"),s}},161:function(t){t.exports=function(){class t{constructor(t){this.type=t.type,this.data=t.data}}return class{constructor(t){this.types=t.types||{},this.reset()}reset(){return this.records=[],this.relations={}}toModel(t,e,s){const r={...t.data};s[e][r.id]||(s[e][r.id]=r);const n=this.relations[e];for(let t in n){var i=n[t];r[t]=r[t]instanceof Array?r[t].map((t=>this.find(i,t,s))):this.find(i,r[t],s)}return r}setupRelations(t){return(()=>{const e=[];for(let s in t){const r=t[s];let[n,i]=Array.from(s.split("."));n=this.types[n]||n,this.relations[n]||(this.relations[n]={}),e.push(this.relations[n][i]=this.types[r.type]||r.type)}return e})()}findRecord(t,e){return this.records.find((s=>s.type===t&&s.data.id===e))}findRecords(t){return this.records.filter((e=>e.type===t))}retrive(t,e){this.sync(e);const{id:s}=e[t];return this.find(t,s)}find(t,e,s){null==s&&(s={});const r=this.findRecord(t,e);return null==r?null:(s[t]||(s[t]={}),s[t][e]||this.toModel(r,t,s))}findAll(t,e){null==e&&(e={});const s=this.findRecords(t);return null==s?[]:(s.forEach((s=>(e[t]||(e[t]={}),this.toModel(s,t,e)))),Object.values(e[t]||{}))}remove(t,e){t=this.types[t]||t;const s=t=>{const e=this.records.indexOf(t);if(!(e<0))return this.records.splice(e,1)};if(null!=e)return s(this.findRecord(t,e));return this.findRecords(t).forEach(s)}sync(e){return this.setupRelations(e.links),(()=>{const s=[];for(var r in e){if("meta"===r||"links"===r)continue;const n=e[r],i=e=>{const s=this.types[r]||r;return this.remove(s,e.id),this.records.push(new t({type:s,data:e}))};n instanceof Array?s.push(n.forEach(i)):s.push(i(n))}return s})()}}}},716:function(t){function e(t,e,s){return(e=function(t){var e=function(t,e){if("object"!=typeof t||null===t)return t;var s=t[Symbol.toPrimitive];if(void 0!==s){var r=s.call(t,e||"default");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"==typeof e?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}t.exports=function(t){var s;const r=function(t){if(null!=t)return null!=t.self||null!=t.related?t:{self:t}};return s=class{constructor(t){null==t&&(t={}),this.scope=t}id(t){return this.constructor.adapter.id(t)}selfLinks(t){}links(){}relationships(){}attributes(t){if(null==t)return null;const e={...this.constructor.adapter.get(t)};delete e.id;const s=this.relationships();for(let t in s)delete e[t];return e}includeRelationships(t,e){const s=this.relationships(),r=[];for(var n in s){const i=s[n];if(!i)throw new Error(`Presenter for ${n} in ${this.constructor.type} is not defined`);const o=new i(t),l=this.constructor.adapter.get(e,n);r.push(o.toJSON(l,{include:!0}))}return r}buildRelationships(t){if(null==t)return null;const e=this.relationships(),s=this.links(t)||{};let n=null;for(var i in e){let c=this.constructor.adapter.get(t,i);var o=e[i],l=t=>c={id:this.constructor.adapter.id(t),type:o.type};const u=t=>{const e={};return null!=t&&(e.data=l(t)),null!=s[i]?e.links=r(s[i]):null==t&&(e.data=null),e};n||(n={}),n[i]||(n[i]={}),c instanceof Array?(n[i].data=c.map(l),null!=s[i]&&(n[i].links=r(s[i]))):n[i]=u(c)}return n}buildSelfLink(t){return r(this.selfLinks(t))}toJSON(t,e){if(null==e&&(e={}),null!=e.meta&&(this.scope.meta=e.meta),null!=e.links&&(this.scope.links=e.links),this.scope.data||(this.scope.data=null),null==t)return this.scope;if(t instanceof Array){const s=t;this.scope.data||(this.scope.data=[]),s.forEach((t=>this.toJSON(t,e)))}else{const s=t;let r=!0;const n={id:this.id(s),type:this.constructor.type,attributes:this.attributes(s)};void 0===n.id&&delete n.id;const i=this.buildRelationships(s);null!=i&&(n.relationships=i);const o=this.buildSelfLink(s);null!=o&&(n.links=o),e.include?(this.scope.included||(this.scope.included=[]),this.scope.included.concat(this.scope.data).some((t=>t.id===n.id&&t.type===n.type))?r=!1:this.scope.included.push(n)):null!=this.scope.data?this.scope.data instanceof Array&&this.scope.data.some((t=>t.id===n.id))?r=!1:this.scope.data.push(n):this.scope.data=n,r&&this.includeRelationships(this.scope,s)}return this.scope}render(t,e){return this.toJSON(t,e)}static toJSON(){return(new this).toJSON(...arguments)}static render(){return(new this).render(...arguments)}},e(s,"adapter",t),e(s,"type","objects"),s}},757:function(t){t.exports=function(){class t{constructor(t){({id:this.id,type:this.type,attributes:this.attributes,relationships:this.relationships,links:this.links,meta:this.meta}=t)}}return class{constructor(t){this.reset()}reset(){this.records=[]}toModel(t,e,s){let r;const n={...t.attributes||{}};if(n.type&&(r=n.type),n.id=t.id,n.type=t.type,s[e]||(s[e]={}),s[e][t.id]||(s[e][t.id]=n),Object.prototype.hasOwnProperty.call(n,"meta")&&(n.attributes={meta:n.meta},delete n.meta),null!=t.meta&&(n.meta=t.meta),null!=t.links&&(n.links=t.links),null!=t.relationships)for(let e in t.relationships){const r=t.relationships[e],{data:i}=r,{links:o}=r,{meta:l}=r;if(n[e]=null,null==i&&null==o)continue;const c=t=>{let{type:e,id:r}=t;return this.find(e,r,s)};n[e]=i instanceof Array?i.map(c):null!=i?c(i):{};const u=n[e];null!=u&&(u._links=o||{},u._meta=l||{})}return r&&(n.type=r),n}findRecord(t,e){return this.records.find((s=>s.type===t&&s.id===e))}findRecords(t){return this.records.filter((e=>e.type===t))}find(t,e,s){null==s&&(s={});const r=this.findRecord(t,e);return null==r?null:(s[t]||(s[t]={}),s[t][e]||this.toModel(r,t,s))}findAll(t,e){null==e&&(e={});const s=this.findRecords(t);return null==s?[]:(s.forEach((s=>(e[t]||(e[t]={}),this.toModel(s,t,e)))),Object.values(e[t]||{}))}remove(t,e){const s=t=>{const e=this.records.indexOf(t);if(!(e<0))return this.records.splice(e,1)};if(null!=e)return s(this.findRecord(t,e));return this.findRecords(t).map(s)}sync(e){const s=e=>{if(null==e)return null;const s=e=>{const{type:s,id:r}=e;this.remove(s,r);const n=new t(e);return this.records.push(n),n};return e instanceof Array?e.map(s):s(e)};s(e.included);const r=s(e.data);if(null==r)return null;const n={};let i=null;return i=r instanceof Array?r.map((t=>this.toModel(t,t.type,n))):this.toModel(r,r.type,n),Object.prototype.hasOwnProperty.call(e,"links")&&(i.links=e.links),Object.prototype.hasOwnProperty.call(e,"meta")&&(i.meta=e.meta),i}}}}},e={};var s=function s(r){var n=e[r];if(void 0!==n)return n.exports;var i=e[r]={exports:{}};return t[r](i,i.exports,s),i.exports}(580);yayson=s}();