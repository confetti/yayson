/*! yayson v 3.0.0 (https://github.com/confetti/yayson) by Johannes Edelstam <johannes@edelst.am>, Jonny Str√∂mberg <jonny.stromberg@gmail.com> */
var yayson=function(n){var r={};function i(t){if(r[t])return r[t].exports;var e=r[t]={i:t,l:!1,exports:{}};return n[t].call(e.exports,e,e.exports,i),e.l=!0,e.exports}return i.m=n,i.c=r,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=1)}([function(t,e){t.exports=class{static get(t,e){return e?t[e]:t}static id(t){t=this.get(t,"id");return void 0===t?t:"".concat(t)}}},function(t,e,n){function r(){var t="default"!==(t=(0<arguments.length&&void 0!==arguments[0]?arguments[0]:{}).adapter)&&(s[t]||t)||i;return l(t)}const i=n(0),s=n(2),l=n(4);t.exports=function(){var t=(0<arguments.length&&void 0!==arguments[0]?arguments[0]:{})["adapter"];return{Store:n(5)(),Presenter:r({adapter:t}),Adapter:i}}},function(t,e,n){t.exports={sequelize:n(3)}},function(t,e,n){n=n(0);class r extends n{static get(t,e){if(null!=t)return t.get(e)}}t.exports=r},function(t,e){function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}t.exports=function(t){var e,n;function a(t){if(null!=t)return null!=t.self||null!=t.related?t:{self:t}}return n=e=class{constructor(t){this.scope=t=null==t?{}:t}id(t){return this.constructor.adapter.id(t)}selfLinks(t){}links(){}relationships(){}attributes(t){if(null==t)return null;const e={...this.constructor.adapter.get(t)};for(var n in delete e.id,this.relationships())delete e[n];return e}includeRelationships(t,e){var n,r=this.relationships();const i=[];for(n in r){const l=r[n];if(!l)throw new Error("Presenter for ".concat(n," in ").concat(this.type," is not defined"));const o=new l(t);var s=this.constructor.adapter.get(e,n);i.push(o.toJSON(s,{include:!0}))}return i}buildRelationships(t){if(null==t)return null;var n,r=this.relationships();const i=this.links(t)||{};let s=null;for(n in r){let e=this.constructor.adapter.get(t,n);var l=r[n],o=t=>e={id:this.constructor.adapter.id(t),type:l.type};s=s||{},s[n]||(s[n]={}),e instanceof Array?(s[n].data=e.map(o),null!=i[n]&&(s[n].links=a(i[n]))):s[n]=(t=>{const e={};return null!=t&&(e.data=o(t)),null!=i[n]?e.links=a(i[n]):null==t&&(e.data=null),e})(e)}return s}buildSelfLink(t){return a(this.selfLinks(t))}toJSON(e,n){if(null!=(n=null==n?{}:n).meta&&(this.scope.meta=n.meta),null!=n.links&&(this.scope.links=n.links),this.scope.data||(this.scope.data=null),null==e)return this.scope;if(e instanceof Array){const t=e;this.scope.data||(this.scope.data=[]),t.forEach(t=>this.toJSON(t,n))}else{let t=!0;const i={id:this.id(e),type:this.constructor.type,attributes:this.attributes(e)};void 0===i.id&&delete i.id;var r=this.buildRelationships(e),r=(null!=r&&(i.relationships=r),this.buildSelfLink(e));null!=r&&(i.links=r),n.include?(this.scope.included||(this.scope.included=[]),this.scope.included.concat(this.scope.data).some(t=>t.id===i.id&&t.type===i.type)?t=!1:this.scope.included.push(i)):null!=this.scope.data?this.scope.data instanceof Array&&this.scope.data.some(t=>t.id===i.id)?t=!1:this.scope.data.push(i):this.scope.data=i,t&&this.includeRelationships(this.scope,e)}return this.scope}render(t,e){return this.toJSON(t,e)}static toJSON(){return(new this).toJSON(...arguments)}static render(){return(new this).render(...arguments)}},r(e,"adapter",t),r(e,"type","objects"),n}},function(t,e){t.exports=function(){class s{constructor(t){({id:this.id,type:this.type,attributes:this.attributes,relationships:this.relationships,links:this.links,meta:this.meta}=t)}}return class{constructor(t){this.reset()}reset(){return this.records=[],this.relations={}}toModel(t,e,n){let r;const i={...t.attributes||{}};if(i.type&&(r=i.type),i.id=t.id,i.type=t.type,n[e]||(n[e]={}),n[e][t.id]||(n[e][t.id]=i),i.hasOwnProperty("meta")&&(i.attributes={meta:i.meta},delete i.meta),null!=t.meta&&(i.meta=t.meta),null!=t.links&&(i.links=t.links),null!=t.relationships)for(var s in t.relationships){var l=t.relationships[s];const a=l["data"];var o=l["links"],l=l["meta"];if((i[s]=null)!=a||null!=o){var c=t=>{var{type:t,id:e}=t;return this.find(t,e,n)};i[s]=a instanceof Array?a.map(c):null!=a?c(a):{};const u=i[s];null!=u&&(u._links=o||{},u._meta=l||{})}}return r&&(i.type=r),i}findRecord(e,n){return this.records.find(t=>t.type===e&&t.id===n)}findRecords(e){return this.records.filter(t=>t.type===e)}find(t,e,n){null==n&&(n={});var r=this.findRecord(t,e);return null==r?null:(n[t]||(n[t]={}),n[t][e]||this.toModel(r,t,n))}findAll(e,n){null==n&&(n={});const t=this.findRecords(e);return null==t?[]:(t.forEach(t=>(n[e]||(n[e]={}),this.toModel(t,e,n))),Object.values(n[e]||{}))}remove(t,e){var n=t=>{t=this.records.indexOf(t);if(!(t<0))return this.records.splice(t,1)};if(null!=e)return n(this.findRecord(t,e));{const r=this.findRecords(t);return r.map(n)}}sync(t){var e=t=>{if(null==t)return null;var e=t=>{var{type:e,id:n}=t,e=(this.remove(e,n),new s(t));return this.records.push(e),e};return t instanceof Array?t.map(e):e(t)};e(t.included);const n=e(t.data);if(null==n)return null;const r={};let i=null;return i=n instanceof Array?n.map(t=>this.toModel(t,t.type,r)):this.toModel(n,n.type,r),t.hasOwnProperty("links")&&(i.links=t.links),t.hasOwnProperty("meta")&&(i.meta=t.meta),i}}}}]);